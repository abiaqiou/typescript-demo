// tsc 的配置文件，决定如何编译 ts 代码
{
  // 指定需要被编译的 ts 文件路径，** 表示任意目录，* 表示任意文件。一般用 webpack 指定
  // "include": ["src/**/*"],

  // 指定不需要被编译的 ts 文件路径
  // "exclude": ["node_modules"],

  // 定义该配置文件继承自某个其它配置文件
  // "extends": "./configs/base",

  // 具体指定被编译的文件列表，一般不用
  // "files": [],

  // 编译器选项，最重要
  "compilerOptions": {
    // 编译后的 js 代码的版本
    // 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'esnext'
    "target": "es6",

    // 编译后的 js 代码中使用的模块化规范
    // 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'esnext'
    "module": "es6",

    // 指定项目中要使用的库，比如在 node 中指定 dom。 浏览器下一般不使用
    /*
    'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'esnext', 'dom', 'dom.iterable',
    'webworker', 'webworker.importscripts', 'webworker.iterable', 'scripthost',
    'es2015.core', 'es2015.collection', 'es2015.generator', 'es2015.iterable', 'es2015.promise', 'es2015.proxy', 'es2015.reflect', 'es2015.symbol', 'es2015.symbol.wellknown',
    'es2016.array.include', 'es2017.object', 'es2017.sharedmemory', 'es2017.string', 'es2017.intl', 'es2017.typedarrays',
    'es2018.asyncgenerator', 'es2018.asynciterable', 'es2018.intl', 'es2018.promise', 'es2018.regexp',
    'es2019.array', 'es2019.object', 'es2019.string', 'es2019.symbol', 'es2020.bigint', 'es2020.promise',
    'es2020.sharedmemory', 'es2020.string', 'es2020.symbol.wellknown', 'es2020.intl',
    'esnext.array', 'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.bigint', 'esnext.string', 'esnext.promise', 'esnext.weakref'
    */
    // "lib": ["dom"],

    // 编译后的 js 文件所在目录, webpack 已指定
    // "outDir": "./dist"

    // 编译后合并代码到一个 js 文件，只能在 module 为 amd 或 system 时使用。一般使用打包工具实现合并功能
    // "outFile": "./dist/allInOne.js"

    // 是否编译 js 文件，默认 false
    // "allowJs": false

    // 是否检查 js 文件符合 ts 规范， 默认 false
    // "checkJs": false

    // 编译时是否移除注释，默认 false
    // "removeComments": false

    // 是否不输出编译后的 js 文件，默认 false
    // "noEmit": false

    // 编译过程如果有误，则不生成编译后的 js 文件，默认 false
    // "noEmitOnError": false

    // 以下四个选项的总开关，默认 false
    "strict": true

    // 编译后的 js 文件是否开启严格模式，默认 false
    // "alwaysStrict": false
    // 不允许隐式的 any，默认 false
    // "noImplicitAny": false
    // 不允许没有指定类型的 this，默认 false
    // "noImplicitThis": false
    // 严格地检查空值，默认 false
    // "strictNullChecks": false
  }
}
